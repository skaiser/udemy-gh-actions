name: Build-Test-Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: 
      - '*'
  schedule:
    - cron: '0 22 * * *'

jobs:
  Build-job:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [16.x]
    name: Making Build
    steps:
      - uses: actions/checkout@v3
      - name: Build Gatsby Site
        uses: actions/setup-node@v3
        with:
          # node-version: ${{ matrix.node-version }}
          node-version: '16.x'
      # This doesn't work: The engine "node" is incompatible with this module.
      # - uses: actions/checkout@master
      # - name: Build Gatsby Site
      #   uses: jzweifel/gatsby-cli-github-action@master
      #   # env:
      #   #   GATSBY_PROJECT_PATH: "./site"
      #   with:
      #     gatsby-arg: build
      # - name: Upload artifacts
      #   uses: actions/upload-artifacts@master
      #   with:
      #     name: build
      #     path: artifacts/index.html
      - run: npm install
      - run: npm run build
      # TODO: Cache node_modules
      # https://github.com/marketplace/actions/cache
      # https://github.com/actions/cache/blob/main/examples.md#node---npm

  Jira-issue-create:
    name: Transition Issue Create
    runs-on: ubuntu-latest
    needs: Build-job
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}

      - name: Create new issue
        id: create
        uses: atlassian/gajira-create@master
        with:
          project: LEAR
          issuetype: Task
          summary: |
              Testing will start for ${{ github.repository }}

      - name: Transition issue
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.create.outputs.issue }}
          transition: "In progress"

  Test-job:
    runs-on: ubuntu-latest
    name: Run tests
    needs: Build-job
    if: ${{ github.ref != 'refs/head/production' }}
    steps:
      - uses: actions/checkout@v3
      - name: Run unit tests
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm install -g mocha
      - run: npm run test

  Deploy-job:
    runs-on: ubuntu-latest
    needs: [Test-job]
    name: Deploy to Surge
    # TODO: Switch to 'production'
    if: ${{ github.ref_name == 'main' }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm install
      - run: npm run build
      - run: npm install -g surge
      - run: surge ./public ${{ secrets.SURGE_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

  sonartest:
    runs-on: ubuntu-latest
    needs: [Test-job]
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Download all workflows
        uses: actions/download-artifact@v3
      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        # with:
        #   projectBaseDir: my-custom-directory
            # args: >
            #   -Dsonar.organization=skaiser
            #   -Dsonar.projectKey=skaiser_udemy-gh-actions
            #   -Dsonar.python.coverage.reportPaths=coverage.xml
            #   -Dsonar.sources=lib/
            #   -Dsonar.test.exclusions=tests/**
            #   -Dsonar.tests=tests/
            #   -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Post-deploy-job:
    runs-on: ubuntu-latest
    needs: [Deploy-job]
    name: Test post-deploy
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: sudo apt install curl
      - run: curl -s -N "https://${{ secrets.SURGE_DOMAIN }}" | grep "Congratulations"

  Notify-on-email:
    runs-on: ubuntu-latest
    name: EmailNotify
    needs: [Build-job, Test-job, Deploy-job, Post-deploy-job, sonartest]
    if: always()
    steps:
      - uses: dawidd6/action-send-mail@v3
        name: Send mail
        with: 
          server_address: smtp.gmail.com
          server_port: 587
          # Results in "ssl3_get_record:wrong version number" error ¯\_(ツ)_/¯
          # secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ${{secrets.MAIL_ADDRESS_PRIMARY}}
          from: Mixt Media Art
          body: Workflow status of ${{github.repository}} 1) Build-job - ${{needs.Build-job.result}} 2) Test-job - ${{needs.Test-job.result}} 3) Deploy-job - ${{needs.Deploy-job.result}} 4) Post-deploy-job - ${{needs.Post-deploy-job.result}} 5) SonarCloud - ${{needs.sonartest.result}}
          # html_body: file://README.html
          priority: low

  # Configured for mixtmediaart@ workspace
  Notify-on-slack:
    runs-on: ubuntu-latest
    name: SlackNotify
    needs: [Build-job, Test-job, Deploy-job, Post-deploy-job, sonartest]
    if: always()
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        # https://github.com/marketplace/actions/slack-notify
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: github
          SLACK_USERNAME: GithubActionsBot
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://${{secrets.SURGE_DOMAIN }}/images/GitHub-Mark-64px.png
          SLACK_TITLE: Workflow status of ${{github.repository}}
          SLACK_MESSAGE: 1) Build-job - ${{needs.Build-job.result}} 2) Test-job - ${{needs.Test-job.result}} 3) Deploy-job - ${{needs.Deploy-job.result}} 4) Post-deploy-job - ${{needs.Post-deploy-job.result}} 5) SonarCloud - ${{needs.sonartest.result}}


  Jira-issue-done:
    name: Transition Issue Done
    runs-on: ubuntu-latest
    needs: [Jira-issue-create, Post-deploy-job]
    steps:
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}

      - name: Transition issue
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ needs.Jira-issue-create.steps.create.outputs.issue }}
          transition: "Done"
      - name: Comment on issue
        uses: atlassian/gajira-comment@master
        with:
          issue: ${{ needs.Jira-issue-create.steps.create.outputs.issue }}
          comment: "Pipeline success"
      
        
        
